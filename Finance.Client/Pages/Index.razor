@page "/"
@using Finance.Client.Model;
@using Finance.Client.Services.Interface;
@inject NavigationManager NavigationManager;
@inject IIncomeService _incomeService;

<PageTitle>Income</PageTitle>

<h1>Income</h1>

<div class="row mb-4">
	<div class="col-sm-6">
		<button type="button" class="btn btn-primary" @onclick="CreateIncome">
			Новый доход
		</button>
	</div>
</div>

@if(Incomes == null)
{
	<h2>Ошибка</h2>
}
else
{
	<table class="table table-striped table-bordered table-hover">
		<thead class="table-dark">
		<th>Amount</th>
		<th>Currnecy</th>
		<th>Category</th>
		<th>Date</th>
		<th></th>
		</thead>
		<tbody>
			@foreach (var income in Incomes)
			{
				<tr>
					<td>@income.Amount</td>
					<td>@income.Currency</td>
					<td>@income.Category</td>
					<td>@income.Date</td>
					<td></td>
				</tr>
			}
		</tbody>
	</table>
}



@code{

	private IEnumerable<Income> Incomes = new List<Income>();
	protected async override Task OnInitializedAsync()
	{
		var apiIncomes = await _incomeService.GetIncomesAsync();

		if(apiIncomes != null && apiIncomes.Any())
		{
			Incomes = apiIncomes;
		}
	}


	private void CreateIncome()
	{
		NavigationManager.NavigateTo("/income");
	}

}

